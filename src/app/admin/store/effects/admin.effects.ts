import { Actions, Effect, ofType } from '@ngrx/effects';import { Injectable } from '@angular/core';import { AdminService } from '../../services/admin.service';import { Observable, of } from 'rxjs';import { Action } from '@ngrx/store';import * as adminActions from '../actions/admin.actions';import { catchError, map, switchMap, tap } from 'rxjs/operators';import { FullUser } from '../../models/full-user.model';@Injectable()export class AdminEffects {  constructor(private action$: Actions,              private adminService: AdminService) {  }  @Effect()  getUsers: Observable<Action> = this.action$    .pipe(      ofType(adminActions.GET_USERS),      switchMap((action: adminActions.GetUsers) => {        return this.adminService.getAllUsers(action.payload)          .pipe(            map((users: FullUser[]) => {              return new adminActions.GetUsersSuccess(users);            }),            catchError((error) => of(new adminActions.GetUsersFail(error)))          );      })    );}