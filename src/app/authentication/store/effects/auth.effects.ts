import { Injectable } from '@angular/core';import { Actions, Effect, ofType } from '@ngrx/effects';import { AuthenticationService } from '../../services';import { Observable, of } from 'rxjs';import { Action } from '@ngrx/store';import * as authActions from '../actions/auth.actions';import { catchError, map, switchMap } from 'rxjs/operators';import { Credentials } from '../../models/credentials.model';@Injectable()export class AuthEffects {  constructor(private action$: Actions,              private authenticationService: AuthenticationService) {  }  @Effect()  logIn$: Observable<Action> = this.action$    .pipe(      ofType(authActions.LOG_IN),      map((action: authActions.LogIn) => action.payload),      switchMap((credentials: Credentials) => {        return this.authenticationService.logIn(credentials)          .pipe(            map((token: string) => {              console.log('LOGIN SUCCESS!');              return new authActions.LogInSuccess(token);            }),            catchError((error) => of(new authActions.LogInFail(error)))          );      })    );}